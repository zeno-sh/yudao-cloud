<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.iocoder.yudao.module.dm.dal.mysql.purchaseorder.DmPurchaseOrderMapper">

    <!--
        一般情况下，尽可能使用 Mapper 进行 CRUD 增删改查即可。
        无法满足的场景，例如说多表关联查询，才使用 XML 编写 SQL。
        代码生成器暂时只生成 Mapper XML 文件本身，更多推荐 MybatisX 快速开发插件来生成查询。
        文档可见：https://www.iocoder.cn/MyBatis/x-plugins/
     -->
    <select id="selectPage2" resultType="cn.iocoder.yudao.module.dm.dal.dataobject.purchaseorder.PurchaseOrderDO">
        SELECT o.*
        FROM dm_purchase_order as o
        WHERE 1=1

        <!-- 动态主表条件 -->
        <if test="reqVO.orderNo != null and reqVO.orderNo != ''">
            AND o.order_no = #{reqVO.orderNo}
        </if>
        <if test="reqVO.owner != null">
            AND o.owner = #{reqVO.owner}
        </if>
        <if test="reqVO.settleType != null">
            AND o.settle_type = #{reqVO.settleType}
        </if>
        <if test="reqVO.supplierId != null">
            AND o.supplier_id = #{reqVO.supplierId}
        </if>
        <if test="reqVO.tax != null">
            AND o.tax = #{reqVO.tax}
        </if>
        <if test="reqVO.status != null">
            AND o.status = #{reqVO.status}
        </if>
        <if test="reqVO.createTime != null and reqVO.createTime[0] != null and reqVO.createTime[1] != null">
            AND o.create_time BETWEEN #{reqVO.createTime[0]} AND #{reqVO.createTime[1]}
        </if>

        <!-- 动态子表条件，使用子查询 -->
        <if test="reqVO.planNumber != null || reqVO.batchNumber">
            AND o.id IN (
            SELECT i.order_id
                FROM dm_purchase_order_item i
            LEFT JOIN dm_purchase_plan_item AS pi ON i.plan_number = pi.plan_number
            LEFT JOIN dm_purchase_plan p ON pi.plan_id = p.id
                WHERE 1=1
            <if test="reqVO.planNumber != null">
                AND i.plan_number = #{reqVO.planNumber}
            </if>
            <if test="reqVO.batchNumber != null">
                AND p.batch_number = #{reqVO.batchNumber}
            </if>
            <if test="reqVO.productId != null">
                AND pi.product_id = #{reqVO.productId}
            </if>
            )
        </if>
        <!-- 动态子表条件，使用子查询 -->
        <if test="reqVO.productId != null">
            AND o.id IN (
            SELECT i.order_id
                FROM dm_purchase_order_item i
            LEFT JOIN dm_purchase_plan_item AS pi ON i.plan_number = pi.plan_number
                WHERE pi.product_id = #{reqVO.productId}
            )
        </if>
        ORDER BY o.id DESC
    </select>

    <!-- 按月统计 -->
    <select id="selectMonthlyProductStock" resultType="cn.iocoder.yudao.module.dm.service.purchase.order.dto.ProductStockDTO">
        SELECT 
            pi.id as product_id,
            IFNULL(h.pre_total, 0) as pre_total,
            IFNULL(p.purchase_num, 0) as purchase_num,
            IFNULL(p.purchase_price, 0) as purchase_price,
            IFNULL(p.purchase_tax_price, 0) as purchase_tax_price,
            IFNULL(d.delivery_num, 0) as delivery_num,
            IFNULL(h.pre_total, 0) + IFNULL(p.purchase_num, 0) - IFNULL(d.delivery_num, 0) as current_balance
        FROM dm_product_info pi
        LEFT JOIN (
            -- 历史数据（计算期初库存）
            SELECT 
                poi.product_id,
                SUM(poi.purchase_quantity) - IFNULL((
                    SELECT SUM(tpi.quantity)
                    FROM dm_transport_plan_item tpi
                    INNER JOIN dm_transport_plan tp ON tpi.plan_id = tp.id
                    WHERE tp.despatch_date &lt; #{reqVO.date[0]}
                        AND tp.transport_status in (10, 20, 30, 40)
                        AND tp.deleted = 0
                        AND tpi.deleted = 0
                        AND tpi.product_id = poi.product_id
                ), 0) as pre_total
            FROM dm_purchase_order_item poi
            INNER JOIN dm_purchase_order po ON poi.order_id = po.id
            WHERE po.create_time &lt; #{reqVO.date[0]}
                AND po.deleted = 0
                AND poi.deleted = 0
                AND po.status IN (20, 30, 40)
            GROUP BY poi.product_id
        ) h ON pi.id = h.product_id
        LEFT JOIN (
            -- 采购数据
            SELECT 
                poi.product_id,
                SUM(poi.purchase_quantity) AS purchase_num,
                SUM(poi.total_amount) AS purchase_price,
                SUM(poi.total_tax_amount) AS purchase_tax_price
            FROM dm_purchase_order_item poi
            INNER JOIN dm_purchase_order po ON poi.order_id = po.id
            WHERE po.create_time BETWEEN #{reqVO.date[0]} AND #{reqVO.date[1]}
                AND po.deleted = 0
                AND poi.deleted = 0
                AND po.status IN (20, 30, 40)
            GROUP BY poi.product_id
        ) p ON pi.id = p.product_id
        LEFT JOIN (
            -- 发货数据
            SELECT 
                tpi.product_id,
                SUM(tpi.quantity) AS delivery_num
            FROM dm_transport_plan_item tpi
            INNER JOIN dm_transport_plan tp ON tpi.plan_id = tp.id
            WHERE tp.despatch_date BETWEEN #{reqVO.date[0]} AND #{reqVO.date[1]}
                AND tp.transport_status in (10, 20, 30, 40)
                AND tp.deleted = 0
                AND tpi.deleted = 0
            GROUP BY tpi.product_id
        ) d ON pi.id = d.product_id
        WHERE pi.deleted = 0
        <if test="reqVO.productId != null">
            AND pi.id = #{reqVO.productId}
        </if>
        AND (
            IFNULL(h.pre_total, 0) != 0 
            OR IFNULL(p.purchase_num, 0) != 0 
            OR IFNULL(d.delivery_num, 0) != 0
        )
        ORDER BY (IFNULL(h.pre_total, 0) + IFNULL(p.purchase_num, 0) - IFNULL(d.delivery_num, 0)) DESC, pi.id DESC
    </select>

</mapper>