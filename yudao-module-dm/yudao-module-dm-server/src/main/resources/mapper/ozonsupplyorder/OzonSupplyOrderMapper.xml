<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.iocoder.yudao.module.dm.dal.mysql.ozonsupplyorder.OzonSupplyOrderMapper">

    <!--
        一般情况下，尽可能使用 Mapper 进行 CRUD 增删改查即可。
        无法满足的场景，例如说多表关联查询，才使用 XML 编写 SQL。
        代码生成器暂时只生成 Mapper XML 文件本身，更多推荐 MybatisX 快速开发插件来生成查询。
        文档可见：https://www.iocoder.cn/MyBatis/x-plugins/
     -->

    <select id="selectOrderStatsBatch" resultType="cn.iocoder.yudao.module.dm.dal.dataobject.ozonsupplyorder.OzonSupplyOrderStatsDO">
        SELECT 
            supply_order_id as supplyOrderId,
            COALESCE(SUM(quantity), 0) as totalItems,
            COALESCE(SUM(total_volume), 0) as totalVolume,
            COUNT(DISTINCT sku) as skuCount
        FROM dm_ozon_supply_order_item
        WHERE client_id = #{clientId}
        AND supply_order_id IN
        <foreach collection="supplyOrderIds" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
        GROUP BY supply_order_id
    </select>

    <!-- 查询进仓数据 -->
    <select id="selectFboInboundPage" resultType="cn.iocoder.yudao.module.dm.dal.dataobject.ozonsupplyorder.OzonFboInboundStatsDO">
        SELECT
               soi.dm_product_id,
               SUM(soi.quantity) as inbound_quantity
        FROM dm_ozon_supply_order so FORCE INDEX (idx_tenant_time_deleted)
        INNER JOIN dm_ozon_supply_order_item soi FORCE INDEX (idx_tenant_dm_deleted_order)
            ON so.supply_order_id = soi.supply_order_id
        WHERE  so.timeslot_from BETWEEN #{beginTime} AND #{endTime}
            <if test="reqVO.productId != null">
                AND soi.dm_product_id = #{reqVO.productId}
            </if>
        GROUP BY soi.dm_product_id
    </select>

    <!-- 查询历史进仓数据 -->
    <select id="selectFboInboundStats" resultType="cn.iocoder.yudao.module.dm.dal.dataobject.ozonsupplyorder.OzonFboInboundStatsDO">
        SELECT
               soi.dm_product_id,
               SUM(soi.quantity) as inbound_quantity
        FROM dm_ozon_supply_order so FORCE INDEX (idx_tenant_time_deleted)
        INNER JOIN dm_ozon_supply_order_item soi FORCE INDEX (idx_tenant_dm_deleted_order)
            ON so.supply_order_id = soi.supply_order_id
        WHERE  so.timeslot_from BETWEEN #{beginTime} AND #{endTime}
            AND soi.dm_product_id IN
            <foreach collection="dmProductIds" item="dmProductId" open="(" separator="," close=")">
                #{dmProductId}
            </foreach>
        GROUP BY soi.dm_product_id
    </select>

    <!-- 查询销售数据 -->
    <select id="selectFboSalesStats" resultType="cn.iocoder.yudao.module.dm.dal.dataobject.ozonsupplyorder.OzonFboSalesStatsDO">
        SELECT
            opo.dm_product_id,
            SUM(oi.quantity) as sales_quantity
        FROM (
            SELECT DISTINCT order_id
            FROM dm_ozon_order
            WHERE in_process_at BETWEEN #{beginTime} AND #{endTime}
            AND status NOT IN ('canceled', 'canceled_by_client', 'cancelled')
            AND order_type = 20
            AND client_id IN
            <foreach collection="clientIds" item="clientId" open="(" separator="," close=")">
                #{clientId}
            </foreach>
        ) o
        INNER JOIN dm_ozon_order_item oi ON o.order_id = oi.order_id
        INNER JOIN dm_ozon_product_online opo ON oi.offer_id = opo.offer_id
        WHERE opo.dm_product_id IN
        <foreach collection="dmProductIds" item="dmProductId" open="(" separator="," close=")">
            #{dmProductId}
        </foreach>
        GROUP BY opo.dm_product_id
    </select>

</mapper>